services:
  product-service:
    image: 'nguwar-product-service-test:latest'
    build:
      context: .
      dockerfile: product-service.Dockerfile
    container_name: nguwar-product-service-test
    depends_on:
      - db
      - naming-server
    ports:
      - 9009:9000
    networks:
      - ms-network
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://naming-server:8761/eureka/
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/productdb
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update

  db:
    image: 'postgres:13.1-alpine'
    container_name: db
    expose:
      - 5432
    ports:
      - 5432:5432
    command: -p 5432
    networks:
      - ms-network
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=productdb

  bidding-command-service:
    image: 'nguwar-bidding-command-test:latest'
    build:
      context: .
      dockerfile: bidding-command-service.Dockerfile
    container_name: nguwar-bidding-command-service-test
    depends_on:
      - db-bid
      - naming-server
      - product-service
      - broker
    ports:
      - 9200:9200
    networks:
      - ms-network
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://naming-server:8761/eureka/
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db-bid:5433/biddb
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=broker:9092

  db-bid:
    image: 'postgres:13.1-alpine'
    container_name: db-bid
    expose:
      - 5433
    ports:
      - 5433:5433
    command: -p 5433
    networks:
      - ms-network
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=biddb

  bidding-query-service:
    image: 'nguwar-bidding-query-test:latest'
    build:
      context: .
      dockerfile: bidding-query-service.Dockerfile
    container_name: nguwar-bidding-query-service-test
    depends_on:
      - db-query
      - naming-server
      - broker
    ports:
      - 9300:9300
    networks:
      - ms-network
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://naming-server:8761/eureka/
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db-query:5434/bidquerydb
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=broker:9092

  db-query:
    image: 'postgres:13.1-alpine'
    container_name: db-query
    expose:
      - 5434
    ports:
      - 5434:5434
    command: -p 5434
    networks:
      - ms-network
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=bidquerydb

  naming-server:
    image: 'eureka-server-test:latest'
    build:
      context: .
      dockerfile: naming-server.Dockerfile
    container_name: eureka-server-test
    ports:
      - 8761:8761
    networks:
      - ms-network
    environment:
      eureka.instance.hostname: naming-server
      eureka.client.serviceUrl.defaultZone: http://naming-server:8761/eureka/

  api-gateway:
    image: 'api-gateway-app-test:latest'
    build:
      context: .
      dockerfile: api-gateway.Dockerfile
    container_name: api-gateway-app-test
    depends_on:
      - naming-server
      - product-service
      - bidding-command-service
    ports:
      - 8765:8765
    networks:
      - ms-network
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://naming-server:8761/eureka/

  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.1
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - ms-network
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-server:7.2.1
    hostname: broker
    container_name: broker
    depends_on:
      - zookeeper
    expose:
      - 9092
      - 9101
    ports:
      - 9092:9092
      - 9101:9101
    networks:
      - ms-network
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker:29092
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'true'
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'

  schema-registry:
    image: confluentinc/cp-schema-registry:7.2.1
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - broker
    ports:
      - "8081:8081"
    networks:
      - ms-network
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'broker:29092'
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081

networks:
  ms-network:
    driver: bridge